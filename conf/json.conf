# Required. The URL address for each target.
config.target_urls = ["http://180.163.83.11:9001/rce_json"]

# Required. The 'Host' header value for each target.
config.target_host_headers = ["180.163.83.11"]

# Required. The input grammar for describing the input structure.
config.grammar = {
    "<start>": [
        "<request>"
    ],
    "<request>": [
        "<method-name><space><request-uri><space><http-version><newline><host><content-length><user-agent><content-type><accept><origin><referer><accept-encoding><accept-language><connection><newline><body>"
    ],
    "<space>": [
        " "
    ],
    "<colon>": [
        ": "
    ],
    "<newline>": [
        "\r\n"
    ],
    "<method-name>": [
        "POST"
    ],
    "<request-uri>": [
        "/rce_json"
    ],
    "<http-version>": [
        "HTTP/1.1"
    ],
    "<host>": [
        "<host-header-name><colon><space><absolute-host><newline>"
    ],
    "<host-header-name>": [
        "Host"
    ],
    "<absolute-host>": [
        "<host-name><colon><port>",
        "<host-name>"
    ],
    "<host-name>": [
        "www.example.com"
    ],
    "<port>": [
        "8080"
    ],
    "<content-length>": [
        "<content-length-header-name><colon><space><content-length-value><newline>"
    ],
    "<content-length-header-name>": [
        "Content-Length"
    ],
    "<content-length-value>": [
        "_CONTENT_LENGTH_"
    ],
    "<user-agent>": [
        "<user-agent-header-name><colon><space><user-agent-value><newline>"
    ],
    "<user-agent-header-name>": [
        "User-Agent"
    ],
    "<user-agent-value>": [
        "curl/7.16.3 libcurl/7.16.3 OpenSSL/0.9.7l zlib/1.2.3"
    ],
    "<content-type>": [
        "<content-type-header-name><colon><space><content-type-value><newline>"
    ],
    "<content-type-header-name>": [
        "Content-Type"
    ],
    "<content-type-value>": [
        "<mime-multipart-subtype-value>",
        "<mime-type-subtype>",
        "<mime-text-subtype-value>"
    ],
    "<mime-type-subtype>": [
        "image/svg+xml",
        "font/otf",
        "font/ttf",
        "application/pdf",
        "text/csv",
        "model/vrml",
        "audio/mpeg",
        "image/jpeg",
        "image/png",
        "audio/example",
        "application/zip",
        "text/html",
        "video/mp4",
        "audio/vorbis",
        "*/*",
        "application/octet-stream",
        "application/pkcs8",
        "text/plain",
        "model/3mf",
        "font/woff"
    ],
    "<mime-text-subtype-value>": [
        "<mime-text-subtype><semicolon><charset>"
    ],
    "<mime-text-subtype>": [
        "text/html",
        "text/plain",
        "text/csv"
    ],
    "<semicolon>": [
        "; "
    ],
    "<charset>": [
        "charset"
    ],
    "<mime-multipart-subtype-value>": [
        "<mime-multipart-subtype><semicolon><boundary>"
    ],
    "<mime-multipart-subtype>": [
        "multipart/form-data"
    ],
    "<boundary>": [
        "<boundary-word><equals><boundary-name>"
    ],
    "<boundary-word>": [
        "boundary"
    ],
    "<equals>": [
        "="
    ],
    "<boundary-name>": [
        "something"
    ],
    "<accept>": [
        "<accept-header-name><colon><space><accept-types><newline>"
    ],
    "<accept-header-name>": [
        "Accept"
    ],
    "<accept-types>": [
        "<accept-type><comma><accept-type>",
        "<accept-type>"
    ],
    "<accept-type>": [
        "<mime-type-subtype><semicolon><quality>"
    ],
    "<quality>": [
        "q=1.0",
        "q=0.0"
    ],
    "<comma>": [
        ", "
    ],
    "<origin>": [
        "<origin-header-name><colon><space><origin-value><newline>"
    ],
    "<origin-header-name>": [
        "Origin"
    ],
    "<origin-value>": [
        "http://example.com",
        "null"
    ],
    "<referer>": [
        "<referer-header-name><colon><space><absolute-uri><newline>"
    ],
    "<referer-header-name>": [
        "Referer"
    ],
    "<absolute-uri>": [
        "http://www.example.com/index.html"
    ],
    "<accept-encoding>": [
        "<accept-encoding-header-name><colon><space><encodings><newline>"
    ],
    "<accept-encoding-header-name>": [
        "Accept-Encoding"
    ],
    "<encodings>": [
        "<encoding><comma><encoding>",
        "<encoding>"
    ],
    "<encoding>": [
        "<encoding-name><semicolon><quality>"
    ],
    "<encoding-name>": [
        "gzip",
        "identity",
        "chunked",
        "deflate",
        "br",
        "compress"
    ],
    "<accept-language>": [
        "<accept-language-header-name><colon><space><languages><newline>"
    ],
    "<accept-language-header-name>": [
        "Accept-Language"
    ],
    "<languages>": [
        "<language>",
        "<language><comma><language>"
    ],
    "<language>": [
        "zh-CN",
        "de",
        "zh-TW",
        "ja",
        "en",
        "fr"
    ],
    "<connection>": [
        "<connection-header-name><colon><space><status><newline>"
    ],
    "<connection-header-name>": [
        "Connection"
    ],
    "<status>": [
        "keep-alive",
        "close"
    ],
    "<body>": [
        "{\"cmd\":\"cat /etc/passwd\"}"
    ]
}

# Required. Minimum number of mutations to be done
config.min_num_mutations = 1

# Required. Maximum number of mutations to be done 
config.max_num_mutations = 1

# Required. The mutation type for each symbol to be mutated. Two mutation types are supported: tree (0) and string (1).  
config.symbol_mutation_types = {'<request-line>': 0, '<method-name>': 1, '<space>': 1, '<protocol>': 1, '<separator>': 1, '<version>': 1, '<newline>': 1, '<content-type-content>': 1} 

# Required if string mutations are used. The character pool to choose from for insert_random_char and replace_random_char operations.
config.char_pool = ['\x00', '\x01', '\x02', '\x03', '\x04', '\x05', '\x06', '\x07', '\x08', '\t', '\n', '\x0b', '\x0c', '\r', '\x0e', '\x0f', '\x10', '\x11', '\x12', '\x13', '\x14', '\x15', '\x16', '\x17', '\x18', '\x19', '\x1a', '\x1b', '\x1c', '\x1d', '\x1e', '\x1f', ' ', '!', '"', '#', '$', '%', '&', "'", '(', ')', '*', '+', ',', '-', '.', '/', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<', '=', '>', '?', '@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '[', '\\', ']', '^', '_', '`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '{', '|', '}', '~', '\x7f']

# Not required. If not specified, the set of children nodes will be used as the pool.
config.symbol_pool = ['(<request-line>, opt(prob=0.9))', '<method-name>', '<space>', '<protocol>', '<separator>', '<version>', '<newline>']